// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // Or your chosen database
  url      = env("DATABASE_URL")
}

model Judgement {
  id          Int      @id @default(autoincrement())
  title       String
  caseNumber  String
  court       String
  date        String
  summary     String?
  fullContent String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// --- NextAuth.js Models ---
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// --- Application User Model ---
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?   // For Credentials provider - store HASHED passwords
  role          String    @default("user") // e.g., "user", "admin"
  accounts      Account[]
  sessions      Session[]
}